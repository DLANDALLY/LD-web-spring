package com.dly.safetynet.services;import com.dly.safetynet.entities.FireStation;import com.dly.safetynet.entities.MedicalRecord;import com.dly.safetynet.entities.Person;import org.junit.jupiter.api.BeforeAll;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import org.junit.jupiter.api.extension.ExtendWith;import org.mockito.InjectMocks;import org.mockito.Mock;import org.mockito.junit.jupiter.MockitoExtension;import java.util.Arrays;import java.util.List;import static org.junit.jupiter.api.Assertions.*;import static org.mockito.Mockito.when;@ExtendWith(MockitoExtension.class)class JsonDataServiceTest {    private List<Person> persons;    private List<FireStation> firestations;    private List<MedicalRecord> medicalRecords;    @InjectMocks    private JsonDataService jsonDataService;    @BeforeEach    void setUp() {    }    @Test    void shouldGetPersons() {    }    @Test    void shouldGetFirestations() {    }    @Test    void shouldGetMedicalRecords() {    }    List<Person> getPersons(){        return List.of(                new Person("John", "Boyd", "1509 Culver St", "Culver", "97451", "841-874-6512", "jaboyd@email.com"),                new Person("Jacob", "Boyd", "1509 Culver St", "Culver", "97451", "841-874-6513", "drk@email.com"),                new Person("Tenley", "Boyd", "1509 Culver St", "Culver", "97451", "841-874-6512", "tenz@email.com"));    }    List<FireStation> getFirestations() {        return List.of(                new FireStation("1509 Culver St", "3"),                new FireStation("29 15th St", "2"),                new FireStation("834 Binoc Ave", "3"));    }    List<MedicalRecord> getMedicalRecords(){        return List.of(                new MedicalRecord("John", "Boyd", "03/06/1984", List.of("aznol:350mg", "hydrapermazol:100mg"), List.of("nillacilan")),                new MedicalRecord("Jacob", "Boyd", "03/06/1989", List.of("pharmacol:5000mg", "terazine:10mg", "noznazol:250mg"), null),                new MedicalRecord("Tenley", "Boyd", "02/18/2012", null, List.of("peanut")));    }}